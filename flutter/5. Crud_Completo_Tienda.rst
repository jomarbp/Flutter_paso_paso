*CRUD COMPLETO DE TIENDA*

**1. Agregar el siguiente código "categoria.dart"**
Escribir el comando: 

Linea::

    class Categoria {
      final int? id;
      final String nombre;
      final String descripcion;
    
      Categoria({
        this.id,
        required this.nombre,
        required this.descripcion,
      });
    
      factory Categoria.fromJson(Map<String, dynamic> json) {
        return Categoria(
          id: int.parse(json['id'].toString()),
          nombre: json['nombre'],
          descripcion: json['descripcion'],
        );
      }
    
      Map<String, dynamic> toJson() {
        return {
          'id': id,
          'nombre': nombre,
          'descripcion': descripcion,
        };
      }
    }

**2. producto.dart**

Linea::

        class Producto {
          final int? id;
          final String nombre;
          final String descripcion;
          final double precio;
          final int stock;
          final int categoriaId;
          final String? imagenUrl;
          final bool estado;
          final String? categoriaNombre;
        
          Producto({
            this.id,
            required this.nombre,
            required this.descripcion,
            required this.precio,
            required this.stock,
            required this.categoriaId,
            this.imagenUrl,
            this.estado = true,
            this.categoriaNombre,
          });
        
          factory Producto.fromJson(Map<String, dynamic> json) {
            return Producto(
              id: int.parse(json['id'].toString()),
              nombre: json['nombre'],
              descripcion: json['descripcion'],
              precio: double.parse(json['precio'].toString()),
              stock: int.parse(json['stock'].toString()),
              categoriaId: int.parse(json['categoria_id'].toString()),
              imagenUrl: json['imagen_url'],
              estado: json['estado'] == '1' || json['estado'] == true,
              categoriaNombre: json['categoria_nombre'],
            );
          }
        
          Map<String, dynamic> toJson() {
            return {
              'id': id,
              'nombre': nombre,
              'descripcion': descripcion,
              'precio': precio,
              'stock': stock,
              'categoria_id': categoriaId,
              'imagen_url': imagenUrl,
              'estado': estado,
            };
          }
        }

3. **crear_categoria.dart**

Linea::

    import 'package:flutter/material.dart';
    import 'package:http/http.dart' as http;
    import 'dart:convert';
    
    class CrearCategoria extends StatefulWidget {
      @override
      _CrearCategoriaState createState() => _CrearCategoriaState();
    }
    
    class _CrearCategoriaState extends State<CrearCategoria> {
      final _formKey = GlobalKey<FormState>();
      final _nombreController = TextEditingController();
      final _descripcionController = TextEditingController();
      bool _isLoading = false;
    
      Future<void> _guardarCategoria() async {
        if (_formKey.currentState!.validate()) {
          setState(() {
            _isLoading = true;
          });
    
          try {
            final response = await http.post(
              Uri.parse('http://localhost/tienda/api_tienda.php?resource=categorias'),
              headers: {'Content-Type': 'application/json'},
              body: jsonEncode({
                'nombre': _nombreController.text,
                'descripcion': _descripcionController.text,
              }),
            );
    
            if (response.statusCode == 200) {
              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  content: Text('Categoría creada con éxito'),
                  backgroundColor: Colors.green,
                ),
              );
              Navigator.pop(context);
            }
          } catch (e) {
            ScaffoldMessenger.of(context).showSnackBar(
              SnackBar(
                content: Text('Error al crear la categoría'),
                backgroundColor: Colors.red,
              ),
            );
          } finally {
            setState(() {
              _isLoading = false;
            });
          }
        }
      }
    
      @override
      Widget build(BuildContext context) {
        return Scaffold(
          appBar: AppBar(
            title: Text(
              'Nueva Categoría',
              style: TextStyle(fontWeight: FontWeight.bold),
            ),
            centerTitle: true,
            backgroundColor: Colors.blue,
            elevation: 0,
          ),
          body: Container(
            decoration: BoxDecoration(
              gradient: LinearGradient(
                begin: Alignment.topCenter,
                end: Alignment.bottomCenter,
                colors: [Colors.blue.shade50, Colors.white],
              ),
            ),
            child: SingleChildScrollView(
              padding: EdgeInsets.all(16.0),
              child: Card(
                elevation: 5,
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(15),
                ),
                child: Padding(
                  padding: EdgeInsets.all(16.0),
                  child: Form(
                    key: _formKey,
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.stretch,
                      children: [
                        TextFormField(
                          controller: _nombreController,
                          decoration: InputDecoration(
                            labelText: 'Nombre',
                            border: OutlineInputBorder(
                              borderRadius: BorderRadius.circular(10),
                            ),
                            prefixIcon: Icon(Icons.category),
                          ),
                          validator: (value) {
                            if (value == null || value.isEmpty) {
                              return 'Por favor ingrese un nombre';
                            }
                            return null;
                          },
                        ),
                        SizedBox(height: 20),
                        TextFormField(
                          controller: _descripcionController,
                          decoration: InputDecoration(
                            labelText: 'Descripción',
                            border: OutlineInputBorder(
                              borderRadius: BorderRadius.circular(10),
                            ),
                            prefixIcon: Icon(Icons.description),
                          ),
                          maxLines: 3,
                          validator: (value) {
                            if (value == null || value.isEmpty) {
                              return 'Por favor ingrese una descripción';
                            }
                            return null;
                          },
                        ),
                        SizedBox(height: 24),
                        ElevatedButton(
                          onPressed: _isLoading ? null : _guardarCategoria,
                          child: _isLoading
                              ? SizedBox(
                                  height: 20,
                                  width: 20,
                                  child: CircularProgressIndicator(
                                    color: Colors.white,
                                    strokeWidth: 2,
                                  ),
                                )
                              : Text(
                                  'Guardar Categoría',
                                  style: TextStyle(fontSize: 16),
                                ),
                          style: ElevatedButton.styleFrom(
                            backgroundColor: Colors.blue,
                            padding: EdgeInsets.symmetric(vertical: 15),
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(10),
                            ),
                          ),
                        ),
                      ],
                    ),
                  ),
                ),
              ),
            ),
          ),
        );
      }
    }

3. Actualizar el archivo **main.dart**

.. image:: img/Main.dart_actualizado.png
   :height: 45
   :width: 90
   :scale: 10
   :alt: JoeAI

**Al ejecutar el archivo main.dart, deberá primero iniciar el loginPage.dart, ingresar DATOS REALES DE LA TABLA usuarios.... Al ingresar las credenciales correctas, el app les dará acceso al Dashboard.dart**
